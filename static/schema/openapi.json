{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Metriql REST API"
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SegmentationQuery": {
        "properties": {
          "type": {
            "enum": [
              "segmentation"
            ]
          },
          "report": {
            "$ref": "https://metriql.com/schema/report-options/segmentation.json"
          }
        }
      },
      "FunnelQuery": {
        "properties": {
          "type": {
            "enum": [
              "segmentation"
            ]
          },
          "report": {
            "$ref": "https://metriql.com/schema/report-options/funnel.json"
          }
        }
      },
      "RetentionQuery": {
        "properties": {
          "type": {
            "enum": [
              "segmentation"
            ]
          },
          "report": {
            "$ref": "https://metriql.com/schema/report-options/retention.json"
          }
        }
      },
      "SqlQuery": {
        "properties": {
          "type": {
            "enum": [
              "segmentation"
            ]
          },
          "report": {
            "$ref": "https://metriql.com/schema/report-options/sql.json"
          }
        }
      },
      "QueryError": {
        "properties": {
          "charPositionInLine": {
            "format": "int32",
            "type": "integer"
          },
          "errorCode": {
            "format": "int32",
            "type": "integer"
          },
          "errorLine": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          },
          "sqlState": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "QueryColumn": {
        "properties": {
          "dbType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "enum": [
              "STRING",
              "INTEGER",
              "DECIMAL",
              "DOUBLE",
              "LONG",
              "BOOLEAN",
              "DATE",
              "TIME",
              "TIMESTAMP",
              "BINARY",
              "ARRAY_STRING",
              "ARRAY_INTEGER",
              "ARRAY_DOUBLE",
              "ARRAY_LONG",
              "ARRAY_BOOLEAN",
              "ARRAY_DATE",
              "ARRAY_TIME",
              "ARRAY_TIMESTAMP",
              "MAP_STRING",
              "UNKNOWN"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "position"
        ],
        "type": "object"
      },
      "QueryResult": {
        "properties": {
          "error": {
            "$ref": "#/components/schemas/QueryError"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/QueryColumn"
            },
            "type": "array"
          },
          "properties": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object"
          },
          "result": {
            "items": {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "TaskTicketQueryResult": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/QueryResult"
          },
          "startedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "IDLE",
              "RUNNING",
              "CANCELED",
              "FINISHED"
            ],
            "type": "string"
          },
          "update": {
            "type": "object"
          }
        },
        "required": [
          "startedAt",
          "status"
        ],
        "type": "object"
      },
      "SuccessMessage": {
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ],
        "type": "object"
      },
      "TaskTicketObject": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "result": {
            "type": "object"
          },
          "startedAt": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "IDLE",
              "RUNNING",
              "CANCELED",
              "FINISHED"
            ],
            "type": "string"
          },
          "update": {
            "type": "object"
          }
        },
        "required": [
          "startedAt",
          "status"
        ],
        "type": "object"
      }
    }
  },
  "paths": {
    "/api/task/cancel": {
      "post": {
        "description": "",
        "operationId": "CancelQuery",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessMessage"
                }
              }
            }
          }
        },
        "summary": "Cancel a query",
        "tags": [
          "task"
        ]
      }
    },
    "/api/task/status": {
      "get": {
        "description": "Get status of running query",
        "operationId": "Status",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTicketObject"
                }
              }
            }
          }
        },
        "summary": "View task status",
        "tags": [
          "task"
        ]
      }
    },
    "/v1/metadata": {
      "get": {
        "description": "Get dataset schema",
        "operationId": "Metadata",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "https://metriql.com/schema/dataset.schema.json"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "summary": "Get metadata",
        "tags": [
          "admin"
        ]
      }
    },
    "/v1/query": {
      "post": {
        "operationId": "ExecuteQuery",
        "externalDocs": {
          "description": "Learn more about report types",
          "url": "https://metriql.com/query/introduction"
        },
        "parameters": [
          {
            "in": "query",
            "name": "useCache",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "initialWaitInSeconds",
            "schema": {
              "default": 50,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "segmentation": "#/components/schemas/SegmentationQuery",
                    "funnel": "#/components/schemas/FunnelQuery",
                    "retention": "#/components/schemas/RetentionQuery",
                    "sql": "#/components/schemas/SqlQuery"
                  }
                },
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/SegmentationQuery"
                  },
                  {
                    "$ref": "#/components/schemas/FunnelQuery"
                  },
                  {
                    "$ref": "#/components/schemas/RetentionQuery"
                  },
                  {
                    "$ref": "#/components/schemas/SqlQuery"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskTicketQueryResult"
                }
              }
            }
          }
        },
        "summary": "Execute query"
      }
    },
    "/v1/sql": {
      "post": {
        "operationId": "CompileQuery",
        "externalDocs": {
          "description": "Learn more about report types",
          "url": "https://metriql.com/query/introduction"
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "segmentation": "#/components/schemas/SegmentationQuery",
                    "funnel": "#/components/schemas/FunnelQuery",
                    "retention": "#/components/schemas/RetentionQuery",
                    "sql": "#/components/schemas/SqlQuery"
                  }
                }
              },
              "FunnelQuery": {
                "properties": {
                  "type": {
                    "enum": [
                      "segmentation"
                    ]
                  },
                  "report": {
                    "id": "https://metriql.com/schema/report-options/funnel.json",
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Funnel Recipe Query",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "steps": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "dataset": {
                              "type": "string"
                            },
                            "filters": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "dimension": {},
                                  "measure": {
                                    "type": "string"
                                  },
                                  "mapping": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {}
                                },
                                "oneOf": [
                                  {
                                    "required": [
                                      "measure"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "mapping"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "dimension"
                                    ]
                                  }
                                ],
                                "required": [
                                  "operator"
                                ]
                              }
                            }
                          },
                          "required": [
                            "dataset"
                          ]
                        }
                      },
                      "excludedSteps": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "start": {
                              "type": "integer"
                            },
                            "step": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "dataset": {
                                  "type": "string"
                                },
                                "filters": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {},
                                      "measure": {
                                        "type": "string"
                                      },
                                      "mapping": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "value": {}
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "measure"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "mapping"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "dimension"
                                        ]
                                      }
                                    ],
                                    "required": [
                                      "operator"
                                    ]
                                  }
                                }
                              },
                              "required": [
                                "dataset"
                              ]
                            }
                          },
                          "required": [
                            "step"
                          ]
                        }
                      },
                      "dimension": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "step": {
                            "type": "integer"
                          },
                          "dimension": {}
                        },
                        "required": [
                          "step",
                          "dimension"
                        ]
                      },
                      "window": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "integer"
                          },
                          "type": {}
                        },
                        "required": [
                          "value",
                          "type"
                        ]
                      },
                      "connector": {
                        "type": "string"
                      },
                      "strictlyOrdered": {
                        "type": "boolean"
                      },
                      "approximate": {
                        "type": "boolean"
                      },
                      "defaultDateRange": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "steps"
                    ],
                    "definitions": {
                      "RecipeDataset": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "dataset": {
                            "type": "string"
                          },
                          "filters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "dimension": {},
                                "measure": {
                                  "type": "string"
                                },
                                "mapping": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "value": {}
                              },
                              "oneOf": [
                                {
                                  "required": [
                                    "measure"
                                  ]
                                },
                                {
                                  "required": [
                                    "mapping"
                                  ]
                                },
                                {
                                  "required": [
                                    "dimension"
                                  ]
                                }
                              ],
                              "required": [
                                "operator"
                              ]
                            }
                          }
                        },
                        "required": [
                          "dataset"
                        ]
                      },
                      "FilterReference": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "dimension": {},
                          "measure": {
                            "type": "string"
                          },
                          "mapping": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "value": {}
                        },
                        "oneOf": [
                          {
                            "required": [
                              "measure"
                            ]
                          },
                          {
                            "required": [
                              "mapping"
                            ]
                          },
                          {
                            "required": [
                              "dimension"
                            ]
                          }
                        ],
                        "required": [
                          "operator"
                        ]
                      },
                      "ExcludedStep": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "start": {
                            "type": "integer"
                          },
                          "step": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "dataset": {
                                "type": "string"
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "dimension": {},
                                    "measure": {
                                      "type": "string"
                                    },
                                    "mapping": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "value": {}
                                  },
                                  "oneOf": [
                                    {
                                      "required": [
                                        "measure"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "mapping"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "dimension"
                                      ]
                                    }
                                  ],
                                  "required": [
                                    "operator"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "dataset"
                            ]
                          }
                        },
                        "required": [
                          "step"
                        ]
                      },
                      "FunnelDimension": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "step": {
                            "type": "integer"
                          },
                          "dimension": {}
                        },
                        "required": [
                          "step",
                          "dimension"
                        ]
                      },
                      "FunnelWindow": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "integer"
                          },
                          "type": {}
                        },
                        "required": [
                          "value",
                          "type"
                        ]
                      }
                    }
                  }
                }
              },
              "RetentionQuery": {
                "properties": {
                  "type": {
                    "enum": [
                      "segmentation"
                    ]
                  },
                  "report": {
                    "id": "https://metriql.com/schema/report-options/retention.json",
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Retention Recipe Query",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "first_step": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "dataset": {
                            "type": "string"
                          },
                          "filters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "dimension": {},
                                "measure": {
                                  "type": "string"
                                },
                                "mapping": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "value": {}
                              },
                              "oneOf": [
                                {
                                  "required": [
                                    "measure"
                                  ]
                                },
                                {
                                  "required": [
                                    "mapping"
                                  ]
                                },
                                {
                                  "required": [
                                    "dimension"
                                  ]
                                }
                              ],
                              "required": [
                                "operator"
                              ]
                            }
                          }
                        },
                        "required": [
                          "dataset"
                        ]
                      },
                      "returning_step": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "dataset": {
                            "type": "string"
                          },
                          "filters": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": false,
                              "properties": {
                                "dimension": {},
                                "measure": {
                                  "type": "string"
                                },
                                "mapping": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "value": {}
                              },
                              "oneOf": [
                                {
                                  "required": [
                                    "measure"
                                  ]
                                },
                                {
                                  "required": [
                                    "mapping"
                                  ]
                                },
                                {
                                  "required": [
                                    "dimension"
                                  ]
                                }
                              ],
                              "required": [
                                "operator"
                              ]
                            }
                          }
                        },
                        "required": [
                          "dataset"
                        ]
                      },
                      "dimension": {
                        "type": "string"
                      },
                      "approximate": {
                        "type": "boolean"
                      },
                      "date_unit": {},
                      "connector": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "first_step",
                      "returning_step"
                    ],
                    "definitions": {
                      "FilterReference": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "dimension": {},
                          "measure": {
                            "type": "string"
                          },
                          "mapping": {
                            "type": "string"
                          },
                          "operator": {
                            "type": "string"
                          },
                          "value": {}
                        },
                        "required": [
                          "operator"
                        ]
                      }
                    }
                  }
                }
              },
              "SqlQuery": {
                "properties": {
                  "type": {
                    "enum": [
                      "segmentation"
                    ]
                  },
                  "report": {
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "id": "https://metriql.com/schema/report-options/sql.json",
                    "title": "Sql Report Options",
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "query": {
                        "type": "string"
                      },
                      "query_options": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "limit": {
                            "type": "integer"
                          },
                          "default_database": {
                            "type": "string"
                          },
                          "default_schema": {
                            "type": "string"
                          },
                          "use_cache": {
                            "type": "boolean"
                          }
                        }
                      },
                      "report_options": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "measures": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "dimensions": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "pivots": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "chartOptions": {},
                          "tableOptions": {},
                          "columnOptions": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      },
                      "version": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "query"
                    ],
                    "definitions": {
                      "QueryOptions": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "limit": {
                            "type": "integer"
                          },
                          "default_database": {
                            "type": "string"
                          },
                          "default_schema": {
                            "type": "string"
                          },
                          "use_cache": {
                            "type": "boolean"
                          }
                        }
                      },
                      "ReportOptions": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "measures": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "dimensions": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "pivots": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "chartOptions": {},
                          "tableOptions": {},
                          "columnOptions": {
                            "type": "array",
                            "items": {}
                          }
                        }
                      }
                    }
                  }
                }
              },
              "QueryError": {
                "properties": {
                  "charPositionInLine": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "errorCode": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "errorLine": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "message": {
                    "type": "string"
                  },
                  "sqlState": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "QueryColumn": {
                "properties": {
                  "dbType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "format": "int32",
                    "type": "integer"
                  },
                  "type": {
                    "enum": [
                      "STRING",
                      "INTEGER",
                      "DECIMAL",
                      "DOUBLE",
                      "LONG",
                      "BOOLEAN",
                      "DATE",
                      "TIME",
                      "TIMESTAMP",
                      "BINARY",
                      "ARRAY_STRING",
                      "ARRAY_INTEGER",
                      "ARRAY_DOUBLE",
                      "ARRAY_LONG",
                      "ARRAY_BOOLEAN",
                      "ARRAY_DATE",
                      "ARRAY_TIME",
                      "ARRAY_TIMESTAMP",
                      "MAP_STRING",
                      "UNKNOWN"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "position"
                ],
                "type": "object"
              },
              "QueryResult": {
                "properties": {
                  "error": {
                    "properties": {
                      "charPositionInLine": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "errorCode": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "errorLine": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "message": {
                        "type": "string"
                      },
                      "sqlState": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "metadata": {
                    "items": {
                      "properties": {
                        "dbType": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "position": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "type": {
                          "enum": [
                            "STRING",
                            "INTEGER",
                            "DECIMAL",
                            "DOUBLE",
                            "LONG",
                            "BOOLEAN",
                            "DATE",
                            "TIME",
                            "TIMESTAMP",
                            "BINARY",
                            "ARRAY_STRING",
                            "ARRAY_INTEGER",
                            "ARRAY_DOUBLE",
                            "ARRAY_LONG",
                            "ARRAY_BOOLEAN",
                            "ARRAY_DATE",
                            "ARRAY_TIME",
                            "ARRAY_TIMESTAMP",
                            "MAP_STRING",
                            "UNKNOWN"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "position"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "properties": {
                    "additionalProperties": {
                      "type": "object"
                    },
                    "type": "object"
                  },
                  "result": {
                    "items": {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "TaskTicketQueryResult": {
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "result": {
                    "properties": {
                      "error": {
                        "properties": {
                          "charPositionInLine": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "errorCode": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "errorLine": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "message": {
                            "type": "string"
                          },
                          "sqlState": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "metadata": {
                        "items": {
                          "properties": {
                            "dbType": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "position": {
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": {
                              "enum": [
                                "STRING",
                                "INTEGER",
                                "DECIMAL",
                                "DOUBLE",
                                "LONG",
                                "BOOLEAN",
                                "DATE",
                                "TIME",
                                "TIMESTAMP",
                                "BINARY",
                                "ARRAY_STRING",
                                "ARRAY_INTEGER",
                                "ARRAY_DOUBLE",
                                "ARRAY_LONG",
                                "ARRAY_BOOLEAN",
                                "ARRAY_DATE",
                                "ARRAY_TIME",
                                "ARRAY_TIMESTAMP",
                                "MAP_STRING",
                                "UNKNOWN"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "position"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "properties": {
                        "additionalProperties": {
                          "type": "object"
                        },
                        "type": "object"
                      },
                      "result": {
                        "items": {
                          "items": {
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "startedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "IDLE",
                      "RUNNING",
                      "CANCELED",
                      "FINISHED"
                    ],
                    "type": "string"
                  },
                  "update": {
                    "type": "object"
                  }
                },
                "required": [
                  "startedAt",
                  "status"
                ],
                "type": "object"
              },
              "SuccessMessage": {
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "success": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "success"
                ],
                "type": "object"
              },
              "TaskTicketObject": {
                "properties": {
                  "id": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "result": {
                    "type": "object"
                  },
                  "startedAt": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "status": {
                    "enum": [
                      "IDLE",
                      "RUNNING",
                      "CANCELED",
                      "FINISHED"
                    ],
                    "type": "string"
                  },
                  "update": {
                    "type": "object"
                  }
                },
                "required": [
                  "startedAt",
                  "status"
                ],
                "type": "object"
              }
            }
          },
          "paths": {
            "/api/task/cancel": {
              "post": {
                "description": "",
                "operationId": "CancelQuery",
                "parameters": [],
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "success": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "summary": "Cancel a query",
                "tags": [
                  "task"
                ]
              }
            },
            "/api/task/status": {
              "get": {
                "description": "Get status of running query",
                "operationId": "Status",
                "parameters": [],
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "result": {
                              "type": "object"
                            },
                            "startedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "status": {
                              "enum": [
                                "IDLE",
                                "RUNNING",
                                "CANCELED",
                                "FINISHED"
                              ],
                              "type": "string"
                            },
                            "update": {
                              "type": "object"
                            }
                          },
                          "required": [
                            "startedAt",
                            "status"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "summary": "View task status",
                "tags": [
                  "task"
                ]
              }
            },
            "/v0/metadata": {
              "get": {
                "description": "Get dataset schema",
                "operationId": "Metadata",
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "items": {
                            "type": "object",
                            "id": "https://metriql.com/schema/model.schema.json",
                            "$schema": "http://json-schema.org/draft-07/schema#",
                            "title": "The analytics model definition",
                            "definitions": {
                              "dateTimeframes": {
                                "enum": [
                                  "week",
                                  "month",
                                  "year",
                                  "hour_of_day",
                                  "day_of_month",
                                  "week_of_year",
                                  "month_of_year",
                                  "quarter_of_year",
                                  "day_of_week"
                                ]
                              },
                              "timestampTimeframes": {
                                "enum": [
                                  "hour",
                                  "day",
                                  "week",
                                  "month",
                                  "year",
                                  "hourOfDay",
                                  "dayOfMonth",
                                  "weekOfYear",
                                  "monthOfYear",
                                  "quarterOfYear",
                                  "dayOfWeek"
                                ]
                              },
                              "relationship": {
                                "type": "string",
                                "enum": [
                                  "one_to_one",
                                  "one_to_many",
                                  "many_to_one",
                                  "many_to_many"
                                ],
                                "title": "The Relation Type",
                                "default": "one_to_one"
                              },
                              "relationType": {
                                "type": "string",
                                "enum": [
                                  "left_join",
                                  "inner_join",
                                  "right_join",
                                  "full_join"
                                ],
                                "title": "Defines how should we join to the target model",
                                "default": "leftJoin"
                              },
                              "relations": {
                                "type": "object",
                                "examples": [
                                  {
                                    "relationName": {
                                      "model": "campaign",
                                      "target": "id",
                                      "source": "campaign_id"
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "to"
                                  ],
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "to": {
                                      "type": "string"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "model": {
                                      "type": "string",
                                      "title": "The target model of the relation",
                                      "examples": [
                                        "campaign"
                                      ]
                                    },
                                    "relationship": {
                                      "type": "string",
                                      "enum": [
                                        "one_to_one",
                                        "one_to_many",
                                        "many_to_one",
                                        "many_to_many"
                                      ],
                                      "title": "The Relation Type",
                                      "default": "one_to_one"
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression join relation to the target table",
                                      "examples": [
                                        "{{TABLE}}.campaign_id = {{TARGET}}.id"
                                      ]
                                    },
                                    "sourceColumn": {
                                      "deprecated": true,
                                      "type": "string"
                                    },
                                    "targetColumn": {
                                      "deprecated": true,
                                      "type": "string"
                                    },
                                    "target": {
                                      "type": "string",
                                      "title": "The column of the target model",
                                      "examples": [
                                        "id"
                                      ]
                                    },
                                    "source": {
                                      "type": "string",
                                      "title": "The dimension of the source model",
                                      "examples": [
                                        "campaign_id"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "left_join",
                                        "inner_join",
                                        "right_join",
                                        "full_join"
                                      ],
                                      "title": "Defines how should we join to the target model",
                                      "default": "leftJoin"
                                    }
                                  }
                                }
                              },
                              "aggregates": {
                                "type": "object",
                                "additionalProperties": {
                                  "id": "https://metriql.com/schema/report-options/segmentation.json",
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "The segmentation query model definition",
                                  "additionalProperties": false,
                                  "type": "object",
                                  "definitions": {
                                    "filter": {
                                      "type": "array",
                                      "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                      "items": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "measure": "total_transactions",
                                            "operator": "greater_than",
                                            "value": 1000
                                          }
                                        ],
                                        "oneOf": [
                                          {
                                            "required": [
                                              "measure"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "dimension"
                                            ]
                                          }
                                        ],
                                        "properties": {
                                          "measure": {
                                            "type": "string",
                                            "examples": [
                                              "total_transactions"
                                            ]
                                          },
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "user_type",
                                              ":event_timestamp"
                                            ]
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is_set",
                                                  "is_not_set"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "dimension": {
                                      "type": "string",
                                      "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                    },
                                    "measure": {
                                      "type": "string",
                                      "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                    }
                                  },
                                  "properties": {
                                    "dataset": {
                                      "type": "string",
                                      "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                      "examples": [
                                        "in_app_purchase"
                                      ]
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "examples": [
                                          [
                                            "event_timestamp::day",
                                            "user_type"
                                          ]
                                        ],
                                        "type": "string",
                                        "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                      }
                                    },
                                    "measures": {
                                      "type": "array",
                                      "items": {
                                        "examples": [
                                          [
                                            "total_transactions"
                                          ]
                                        ],
                                        "type": "string",
                                        "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                      }
                                    },
                                    "reportOptions": {
                                      "type": "object",
                                      "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                      "examples": [
                                        {
                                          "chartOptions": {
                                            "interactive": true,
                                            "columnOptions": [],
                                            "type": "area",
                                            "showLabels": true,
                                            "showLegend": false
                                          },
                                          "tableOptions": {
                                            "columnOptions": []
                                          },
                                          "columnOptions": null
                                        }
                                      ],
                                      "properties": {
                                        "chartOptions": {
                                          "type": "object",
                                          "examples": [
                                            {
                                              "interactive": true,
                                              "columnOptions": [],
                                              "type": "area",
                                              "showLabels": true,
                                              "showLegend": false
                                            }
                                          ],
                                          "additionalProperties": true
                                        },
                                        "tableOptions": {
                                          "type": "object",
                                          "examples": [
                                            {
                                              "columnOptions": []
                                            }
                                          ],
                                          "additionalProperties": true
                                        },
                                        "columnOptions": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "limit": {
                                      "type": "integer",
                                      "description": "The maximum rows returned by the query.",
                                      "maximum": 50000,
                                      "default": 1000,
                                      "examples": [
                                        5000
                                      ]
                                    },
                                    "filters": {
                                      "type": "array",
                                      "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                      "items": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "measure": "total_transactions",
                                            "operator": "greater_than",
                                            "value": 1000
                                          }
                                        ],
                                        "oneOf": [
                                          {
                                            "required": [
                                              "measure"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "dimension"
                                            ]
                                          }
                                        ],
                                        "properties": {
                                          "measure": {
                                            "type": "string",
                                            "examples": [
                                              "total_transactions"
                                            ]
                                          },
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "user_type",
                                              ":event_timestamp"
                                            ]
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is_set",
                                                  "is_not_set"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "materializes": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "segmentation": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "id": "https://metriql.com/schema/report-options/segmentation.json",
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "The segmentation query model definition",
                                      "additionalProperties": false,
                                      "type": "object",
                                      "definitions": {
                                        "filter": {
                                          "type": "array",
                                          "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                          "items": {
                                            "type": "object",
                                            "examples": [
                                              {
                                                "measure": "total_transactions",
                                                "operator": "greater_than",
                                                "value": 1000
                                              }
                                            ],
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "measure": {
                                                "type": "string",
                                                "examples": [
                                                  "total_transactions"
                                                ]
                                              },
                                              "dimension": {
                                                "type": "string",
                                                "examples": [
                                                  "user_type",
                                                  ":event_timestamp"
                                                ]
                                              },
                                              "operator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is_set",
                                                      "is_not_set"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                        },
                                        "measure": {
                                          "type": "string",
                                          "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                        }
                                      },
                                      "properties": {
                                        "dataset": {
                                          "type": "string",
                                          "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                          "examples": [
                                            "in_app_purchase"
                                          ]
                                        },
                                        "dimensions": {
                                          "type": "array",
                                          "items": {
                                            "examples": [
                                              [
                                                "event_timestamp::day",
                                                "user_type"
                                              ]
                                            ],
                                            "type": "string",
                                            "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                          }
                                        },
                                        "measures": {
                                          "type": "array",
                                          "items": {
                                            "examples": [
                                              [
                                                "total_transactions"
                                              ]
                                            ],
                                            "type": "string",
                                            "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                          }
                                        },
                                        "reportOptions": {
                                          "type": "object",
                                          "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                          "examples": [
                                            {
                                              "chartOptions": {
                                                "interactive": true,
                                                "columnOptions": [],
                                                "type": "area",
                                                "showLabels": true,
                                                "showLegend": false
                                              },
                                              "tableOptions": {
                                                "columnOptions": []
                                              },
                                              "columnOptions": null
                                            }
                                          ],
                                          "properties": {
                                            "chartOptions": {
                                              "type": "object",
                                              "examples": [
                                                {
                                                  "interactive": true,
                                                  "columnOptions": [],
                                                  "type": "area",
                                                  "showLabels": true,
                                                  "showLegend": false
                                                }
                                              ],
                                              "additionalProperties": true
                                            },
                                            "tableOptions": {
                                              "type": "object",
                                              "examples": [
                                                {
                                                  "columnOptions": []
                                                }
                                              ],
                                              "additionalProperties": true
                                            },
                                            "columnOptions": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "limit": {
                                          "type": "integer",
                                          "description": "The maximum rows returned by the query.",
                                          "maximum": 50000,
                                          "default": 1000,
                                          "examples": [
                                            5000
                                          ]
                                        },
                                        "filters": {
                                          "type": "array",
                                          "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                          "items": {
                                            "type": "object",
                                            "examples": [
                                              {
                                                "measure": "total_transactions",
                                                "operator": "greater_than",
                                                "value": 1000
                                              }
                                            ],
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "measure": {
                                                "type": "string",
                                                "examples": [
                                                  "total_transactions"
                                                ]
                                              },
                                              "dimension": {
                                                "type": "string",
                                                "examples": [
                                                  "user_type",
                                                  ":event_timestamp"
                                                ]
                                              },
                                              "operator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is_set",
                                                      "is_not_set"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "measure": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "label": {
                                    "type": [
                                      "null",
                                      "string"
                                    ],
                                    "title": "The label that will be visible in UI",
                                    "minLength": 2
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "double",
                                      "long",
                                      "boolean",
                                      "date",
                                      "time",
                                      "decimal",
                                      "timestamp",
                                      "unknown",
                                      "map_string",
                                      "array_string"
                                    ]
                                  },
                                  "description": {
                                    "type": "string",
                                    "title": "The description will be used in UI"
                                  },
                                  "hidden": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "category": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "dimension": {
                                    "type": "string",
                                    "title": "The dimension name in the same model",
                                    "examples": [
                                      "dimension1"
                                    ]
                                  },
                                  "column": {
                                    "type": "string",
                                    "title": "The column of the measure",
                                    "description": "The column must be present the the source table",
                                    "examples": [
                                      "total_spent"
                                    ]
                                  },
                                  "sql": {
                                    "type": "string",
                                    "title": "The SQL expression of the measure",
                                    "description": "The SQL expression must evaulate to a number value",
                                    "examples": [
                                      "total_spent / 2"
                                    ]
                                  },
                                  "filters": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "title": "The list of filters",
                                      "required": [
                                        "dimension",
                                        "operator",
                                        "valueType"
                                      ],
                                      "allOf": [
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "const": "string"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "notEquals",
                                                  "not_equals",
                                                  "in",
                                                  "contains",
                                                  "startsWith",
                                                  "starts_with",
                                                  "endsWith",
                                                  "not_contains",
                                                  "notContains"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "enum": [
                                                  "integer",
                                                  "double",
                                                  "long"
                                                ]
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "const": "timestamp"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "const": "date"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "const": "boolean"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "is"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "const": "time"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        },
                                        {
                                          "if": {
                                            "properties": {
                                              "valueType": {
                                                "pattern": "^array+"
                                              }
                                            }
                                          },
                                          "then": {
                                            "properties": {
                                              "operator": {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        }
                                      ],
                                      "additionalProperties": false,
                                      "properties": {
                                        "dimension": {
                                          "type": "string",
                                          "examples": [
                                            "campaign_name"
                                          ]
                                        },
                                        "valueType": {
                                          "type": "string",
                                          "enum": [
                                            "string",
                                            "integer",
                                            "double",
                                            "long",
                                            "boolean",
                                            "date",
                                            "time",
                                            "decimal",
                                            "timestamp",
                                            "unknown",
                                            "map_string",
                                            "array_string"
                                          ]
                                        },
                                        "value": {
                                          "title": "The value that will be passed to the operator. Note that if operator is not isSet or isNotSet, this value is required."
                                        }
                                      }
                                    }
                                  },
                                  "aggregation": {
                                    "type": "string",
                                    "title": "The aggregation function that will calculate the final value.",
                                    "enum": [
                                      "count",
                                      "countUnique",
                                      "count_unique",
                                      "sum",
                                      "minimum",
                                      "maximum",
                                      "average",
                                      "approximateUnique",
                                      "approximate_unique"
                                    ]
                                  },
                                  "report": {
                                    "type": "object",
                                    "title": "Defines how should we show the value of the metric in user interface",
                                    "additionalProperties": true,
                                    "properties": {
                                      "suffix": {
                                        "type": "string",
                                        "title": "The value will be added to the dimension value as suffix",
                                        "default": "",
                                        "examples": [
                                          "USD"
                                        ]
                                      },
                                      "prefix": {
                                        "type": "string",
                                        "title": "The value will be added to the dimension value as prefix",
                                        "default": "",
                                        "examples": [
                                          "$"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "measures": {
                                "type": "object",
                                "examples": [
                                  {
                                    "measureName": {
                                      "sql": "total_spent",
                                      "aggregation": "sum",
                                      "report": {
                                        "prefix": "$"
                                      }
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "string",
                                        "integer",
                                        "double",
                                        "long",
                                        "boolean",
                                        "date",
                                        "time",
                                        "decimal",
                                        "timestamp",
                                        "unknown",
                                        "map_string",
                                        "array_string"
                                      ]
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "category": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "dimension": {
                                      "type": "string",
                                      "title": "The dimension name in the same model",
                                      "examples": [
                                        "dimension1"
                                      ]
                                    },
                                    "column": {
                                      "type": "string",
                                      "title": "The column of the measure",
                                      "description": "The column must be present the the source table",
                                      "examples": [
                                        "total_spent"
                                      ]
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression of the measure",
                                      "description": "The SQL expression must evaulate to a number value",
                                      "examples": [
                                        "total_spent / 2"
                                      ]
                                    },
                                    "filters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "The list of filters",
                                        "required": [
                                          "dimension",
                                          "operator",
                                          "valueType"
                                        ],
                                        "allOf": [
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "string"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "notEquals",
                                                    "not_equals",
                                                    "in",
                                                    "contains",
                                                    "startsWith",
                                                    "starts_with",
                                                    "endsWith",
                                                    "not_contains",
                                                    "notContains"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "enum": [
                                                    "integer",
                                                    "double",
                                                    "long"
                                                  ]
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "timestamp"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than",
                                                    "between"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "date"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than",
                                                    "between"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "boolean"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "is"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "time"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "includes",
                                                    "not_includes"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "pattern": "^array+"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "includes",
                                                    "not_includes"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          }
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "campaign_name"
                                            ]
                                          },
                                          "valueType": {
                                            "type": "string",
                                            "enum": [
                                              "string",
                                              "integer",
                                              "double",
                                              "long",
                                              "boolean",
                                              "date",
                                              "time",
                                              "decimal",
                                              "timestamp",
                                              "unknown",
                                              "map_string",
                                              "array_string"
                                            ]
                                          },
                                          "value": {
                                            "title": "The value that will be passed to the operator. Note that if operator is not isSet or isNotSet, this value is required."
                                          }
                                        }
                                      }
                                    },
                                    "aggregation": {
                                      "type": "string",
                                      "title": "The aggregation function that will calculate the final value.",
                                      "enum": [
                                        "count",
                                        "countUnique",
                                        "count_unique",
                                        "sum",
                                        "minimum",
                                        "maximum",
                                        "average",
                                        "approximateUnique",
                                        "approximate_unique"
                                      ]
                                    },
                                    "report": {
                                      "type": "object",
                                      "title": "Defines how should we show the value of the metric in user interface",
                                      "additionalProperties": true,
                                      "properties": {
                                        "suffix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as suffix",
                                          "default": "",
                                          "examples": [
                                            "USD"
                                          ]
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as prefix",
                                          "default": "",
                                          "examples": [
                                            "$"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "alwaysFilters": {
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "title": "The list of filters",
                                    "required": [
                                      "dimension",
                                      "operator",
                                      "valueType"
                                    ],
                                    "allOf": [
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "const": "string"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "notEquals",
                                                "not_equals",
                                                "in",
                                                "contains",
                                                "startsWith",
                                                "starts_with",
                                                "endsWith",
                                                "not_contains",
                                                "notContains"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "enum": [
                                                "integer",
                                                "double",
                                                "long"
                                              ]
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "const": "timestamp"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "const": "date"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "const": "boolean"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "const": "time"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      },
                                      {
                                        "if": {
                                          "properties": {
                                            "valueType": {
                                              "pattern": "^array+"
                                            }
                                          }
                                        },
                                        "then": {
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    ],
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {
                                        "type": "string",
                                        "examples": [
                                          "campaign_name"
                                        ]
                                      },
                                      "valueType": {
                                        "type": "string",
                                        "enum": [
                                          "string",
                                          "integer",
                                          "double",
                                          "long",
                                          "boolean",
                                          "date",
                                          "time",
                                          "decimal",
                                          "timestamp",
                                          "unknown",
                                          "map_string",
                                          "array_string"
                                        ]
                                      },
                                      "value": {
                                        "title": "The value that will be passed to the operator. Note that if operator is not isSet or isNotSet, this value is required."
                                      }
                                    }
                                  }
                                }
                              },
                              "mappings": {
                                "type": [
                                  "null",
                                  "object"
                                ],
                                "examples": [
                                  {
                                    "event_timestamp": "_time"
                                  }
                                ],
                                "additionalProperties": true,
                                "properties": {
                                  "event_timestamp": {
                                    "description": "The timestamp dimension for time-series data. It enforces the date filter in segmentation page and also being used by funnel and retention reports.",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "The dimension that points to user identifier for event models. Used by funnel and retention reports.",
                                    "type": "string"
                                  },
                                  "device_id": {
                                    "type": "string"
                                  },
                                  "session_id": {
                                    "type": "string"
                                  },
                                  "incremental": {
                                    "type": "string"
                                  }
                                }
                              },
                              "dimension": {
                                "type": [
                                  "null",
                                  "object"
                                ],
                                "dependencies": {
                                  "timeframes": [
                                    "type"
                                  ]
                                },
                                "allOf": [
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "timestamp"
                                        }
                                      }
                                    },
                                    "then": {
                                      "properties": {
                                        "timeframes": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "items": {
                                            "enum": [
                                              "hour",
                                              "day",
                                              "week",
                                              "month",
                                              "year",
                                              "hourOfDay",
                                              "dayOfMonth",
                                              "weekOfYear",
                                              "monthOfYear",
                                              "quarterOfYear",
                                              "dayOfWeek"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "const": "date"
                                        }
                                      }
                                    },
                                    "then": {
                                      "properties": {
                                        "timeframes": {
                                          "type": "array",
                                          "uniqueItems": true,
                                          "items": {
                                            "enum": [
                                              "week",
                                              "month",
                                              "year",
                                              "hour_of_day",
                                              "day_of_month",
                                              "week_of_year",
                                              "month_of_year",
                                              "quarter_of_year",
                                              "day_of_week"
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "if": {
                                      "properties": {
                                        "type": {
                                          "not": {
                                            "enum": [
                                              "timestamp",
                                              "date"
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "then": {
                                      "properties": {
                                        "timeframes": {
                                          "type": "null"
                                        }
                                      }
                                    }
                                  }
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "label": {
                                    "type": [
                                      "null",
                                      "string"
                                    ],
                                    "title": "The label that will be visible in UI",
                                    "minLength": 2
                                  },
                                  "pivot": {
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "primary": {
                                    "type": "boolean"
                                  },
                                  "description": {
                                    "type": "string",
                                    "title": "The description will be used in UI"
                                  },
                                  "hidden": {
                                    "type": "boolean",
                                    "default": false
                                  },
                                  "category": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "sql": {
                                    "type": "string",
                                    "title": "The SQL expression of the dimension",
                                    "examples": [
                                      "concat(campaign_start_date, '-', campaign_name)"
                                    ]
                                  },
                                  "column": {
                                    "type": "string",
                                    "title": "The column of the dimension",
                                    "description": "The column must be present the the source table",
                                    "examples": [
                                      "campaign_name"
                                    ]
                                  },
                                  "pivotable": {
                                    "type": "boolean",
                                    "title": "If the dimension can used for pivoting",
                                    "default": true
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "string",
                                      "integer",
                                      "double",
                                      "long",
                                      "boolean",
                                      "date",
                                      "time",
                                      "decimal",
                                      "timestamp",
                                      "unknown",
                                      "map_string",
                                      "array_string"
                                    ]
                                  },
                                  "timeframes": {
                                    "type": "array"
                                  },
                                  "report": {
                                    "type": "object",
                                    "title": "Defines how should we show the value of the metric in user interface",
                                    "additionalProperties": true,
                                    "properties": {
                                      "suffix": {
                                        "type": "string",
                                        "title": "The value will be added to the dimension value as suffix",
                                        "default": "",
                                        "examples": [
                                          "USD"
                                        ]
                                      },
                                      "prefix": {
                                        "type": "string",
                                        "title": "The value will be added to the dimension value as prefix",
                                        "default": "",
                                        "examples": [
                                          "$"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "dimensions": {
                                "type": "object",
                                "examples": [
                                  {
                                    "dimensionName": {
                                      "column": "campaign_name"
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "null",
                                    "object"
                                  ],
                                  "dependencies": {
                                    "timeframes": [
                                      "type"
                                    ]
                                  },
                                  "allOf": [
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "const": "timestamp"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "items": {
                                              "enum": [
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year",
                                                "hourOfDay",
                                                "dayOfMonth",
                                                "weekOfYear",
                                                "monthOfYear",
                                                "quarterOfYear",
                                                "dayOfWeek"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "const": "date"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "items": {
                                              "enum": [
                                                "week",
                                                "month",
                                                "year",
                                                "hour_of_day",
                                                "day_of_month",
                                                "week_of_year",
                                                "month_of_year",
                                                "quarter_of_year",
                                                "day_of_week"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "not": {
                                              "enum": [
                                                "timestamp",
                                                "date"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "null"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "pivot": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "primary": {
                                      "type": "boolean"
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "category": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression of the dimension",
                                      "examples": [
                                        "concat(campaign_start_date, '-', campaign_name)"
                                      ]
                                    },
                                    "column": {
                                      "type": "string",
                                      "title": "The column of the dimension",
                                      "description": "The column must be present the the source table",
                                      "examples": [
                                        "campaign_name"
                                      ]
                                    },
                                    "pivotable": {
                                      "type": "boolean",
                                      "title": "If the dimension can used for pivoting",
                                      "default": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "string",
                                        "integer",
                                        "double",
                                        "long",
                                        "boolean",
                                        "date",
                                        "time",
                                        "decimal",
                                        "timestamp",
                                        "unknown",
                                        "map_string",
                                        "array_string"
                                      ]
                                    },
                                    "timeframes": {
                                      "type": "array"
                                    },
                                    "report": {
                                      "type": "object",
                                      "title": "Defines how should we show the value of the metric in user interface",
                                      "additionalProperties": true,
                                      "properties": {
                                        "suffix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as suffix",
                                          "default": "",
                                          "examples": [
                                            "USD"
                                          ]
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as prefix",
                                          "default": "",
                                          "examples": [
                                            "$"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "hidden": {
                                "type": "boolean",
                                "default": false
                              },
                              "label": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "title": "The label that will be visible in UI",
                                "minLength": 2
                              },
                              "description": {
                                "type": "string",
                                "title": "The description will be used in UI"
                              },
                              "stringOperators": {
                                "type": "string",
                                "enum": [
                                  "equals",
                                  "notEquals",
                                  "not_equals",
                                  "in",
                                  "contains",
                                  "startsWith",
                                  "starts_with",
                                  "endsWith",
                                  "not_contains",
                                  "notContains"
                                ]
                              },
                              "anyOperators": {
                                "type": "string",
                                "enum": [
                                  "is_set",
                                  "is_not_set"
                                ]
                              },
                              "numberOperators": {
                                "type": "string",
                                "enum": [
                                  "equals",
                                  "less_than",
                                  "greater_than"
                                ]
                              },
                              "dateOperators": {
                                "type": "string",
                                "enum": [
                                  "equals",
                                  "less_than",
                                  "greater_than",
                                  "between"
                                ]
                              },
                              "arrayOperators": {
                                "type": "string",
                                "enum": [
                                  "includes",
                                  "not_includes"
                                ]
                              },
                              "timeOperators": {
                                "type": "string",
                                "enum": [
                                  "includes",
                                  "not_includes"
                                ]
                              },
                              "booleanOperators": {
                                "type": "string",
                                "enum": [
                                  "is"
                                ]
                              },
                              "timestampOperators": {
                                "type": "string",
                                "enum": [
                                  "equals",
                                  "less_than",
                                  "greater_than",
                                  "between"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "string",
                                  "integer",
                                  "double",
                                  "long",
                                  "boolean",
                                  "date",
                                  "time",
                                  "decimal",
                                  "timestamp",
                                  "unknown",
                                  "map_string",
                                  "array_string"
                                ]
                              },
                              "report": {
                                "type": "object",
                                "title": "Defines how should we show the value of the metric in user interface",
                                "additionalProperties": true,
                                "properties": {
                                  "suffix": {
                                    "type": "string",
                                    "title": "The value will be added to the dimension value as suffix",
                                    "default": "",
                                    "examples": [
                                      "USD"
                                    ]
                                  },
                                  "prefix": {
                                    "type": "string",
                                    "title": "The value will be added to the dimension value as prefix",
                                    "default": "",
                                    "examples": [
                                      "$"
                                    ]
                                  }
                                }
                              },
                              "sql": {
                                "type": "string",
                                "title": "The source SQL query of the model",
                                "examples": [
                                  "select 1"
                                ]
                              },
                              "persist": {
                                "type": "object",
                                "title": "Materialize the model in the database"
                              },
                              "target": {
                                "type": "object",
                                "title": "Defines the target table in the database",
                                "required": [
                                  "table"
                                ],
                                "defaultSnippets": [
                                  {
                                    "body": {
                                      "$1": {
                                        "table": "$2"
                                      }
                                    }
                                  }
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "database": {
                                    "type": "string",
                                    "title": "The database of the target table if applicable"
                                  },
                                  "schema": {
                                    "type": "string",
                                    "title": "The schema of the target table  if applicable"
                                  },
                                  "table": {
                                    "type": "string",
                                    "title": "The source table of the model"
                                  }
                                }
                              },
                              "filters": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "title": "The list of filters",
                                  "required": [
                                    "dimension",
                                    "operator",
                                    "valueType"
                                  ],
                                  "allOf": [
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "const": "string"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "notEquals",
                                              "not_equals",
                                              "in",
                                              "contains",
                                              "startsWith",
                                              "starts_with",
                                              "endsWith",
                                              "not_contains",
                                              "notContains"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "enum": [
                                              "integer",
                                              "double",
                                              "long"
                                            ]
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "less_than",
                                              "greater_than"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "const": "timestamp"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "less_than",
                                              "greater_than",
                                              "between"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "const": "date"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "equals",
                                              "less_than",
                                              "greater_than",
                                              "between"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "const": "boolean"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "is"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "const": "time"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "includes",
                                              "not_includes"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "valueType": {
                                            "pattern": "^array+"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "operator": {
                                            "type": "string",
                                            "enum": [
                                              "includes",
                                              "not_includes"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "operator"
                                        ]
                                      }
                                    }
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "dimension": {
                                      "type": "string",
                                      "examples": [
                                        "campaign_name"
                                      ]
                                    },
                                    "valueType": {
                                      "type": "string",
                                      "enum": [
                                        "string",
                                        "integer",
                                        "double",
                                        "long",
                                        "boolean",
                                        "date",
                                        "time",
                                        "decimal",
                                        "timestamp",
                                        "unknown",
                                        "map_string",
                                        "array_string"
                                      ]
                                    },
                                    "value": {
                                      "title": "The value that will be passed to the operator. Note that if operator is not isSet or isNotSet, this value is required."
                                    }
                                  }
                                }
                              }
                            },
                            "additionalProperties": false,
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "target": {
                                "type": "object",
                                "title": "Defines the target table in the database",
                                "required": [
                                  "table"
                                ],
                                "defaultSnippets": [
                                  {
                                    "body": {
                                      "$1": {
                                        "table": "$2"
                                      }
                                    }
                                  }
                                ],
                                "additionalProperties": false,
                                "properties": {
                                  "database": {
                                    "type": "string",
                                    "title": "The database of the target table if applicable"
                                  },
                                  "schema": {
                                    "type": "string",
                                    "title": "The schema of the target table  if applicable"
                                  },
                                  "table": {
                                    "type": "string",
                                    "title": "The source table of the model"
                                  }
                                }
                              },
                              "sql": {
                                "type": "string",
                                "title": "The source SQL query of the model",
                                "examples": [
                                  "select 1"
                                ]
                              },
                              "persist": {
                                "type": "object",
                                "title": "Materialize the model in the database"
                              },
                              "label": {
                                "type": [
                                  "null",
                                  "string"
                                ],
                                "title": "The label that will be visible in UI",
                                "minLength": 2
                              },
                              "description": {
                                "type": "string",
                                "title": "The description will be used in UI"
                              },
                              "hidden": {
                                "type": "boolean",
                                "default": false
                              },
                              "category": {
                                "type": "string",
                                "minLength": 1
                              },
                              "mappings": {
                                "type": [
                                  "null",
                                  "object"
                                ],
                                "examples": [
                                  {
                                    "event_timestamp": "_time"
                                  }
                                ],
                                "additionalProperties": true,
                                "properties": {
                                  "event_timestamp": {
                                    "description": "The timestamp dimension for time-series data. It enforces the date filter in segmentation page and also being used by funnel and retention reports.",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "The dimension that points to user identifier for event models. Used by funnel and retention reports.",
                                    "type": "string"
                                  },
                                  "device_id": {
                                    "type": "string"
                                  },
                                  "session_id": {
                                    "type": "string"
                                  },
                                  "incremental": {
                                    "type": "string"
                                  }
                                }
                              },
                              "dimensions": {
                                "type": "object",
                                "examples": [
                                  {
                                    "dimensionName": {
                                      "column": "campaign_name"
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "null",
                                    "object"
                                  ],
                                  "dependencies": {
                                    "timeframes": [
                                      "type"
                                    ]
                                  },
                                  "allOf": [
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "const": "timestamp"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "items": {
                                              "enum": [
                                                "hour",
                                                "day",
                                                "week",
                                                "month",
                                                "year",
                                                "hourOfDay",
                                                "dayOfMonth",
                                                "weekOfYear",
                                                "monthOfYear",
                                                "quarterOfYear",
                                                "dayOfWeek"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "const": "date"
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "array",
                                            "uniqueItems": true,
                                            "items": {
                                              "enum": [
                                                "week",
                                                "month",
                                                "year",
                                                "hour_of_day",
                                                "day_of_month",
                                                "week_of_year",
                                                "month_of_year",
                                                "quarter_of_year",
                                                "day_of_week"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "if": {
                                        "properties": {
                                          "type": {
                                            "not": {
                                              "enum": [
                                                "timestamp",
                                                "date"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "then": {
                                        "properties": {
                                          "timeframes": {
                                            "type": "null"
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "additionalProperties": false,
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "pivot": {
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "primary": {
                                      "type": "boolean"
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "category": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression of the dimension",
                                      "examples": [
                                        "concat(campaign_start_date, '-', campaign_name)"
                                      ]
                                    },
                                    "column": {
                                      "type": "string",
                                      "title": "The column of the dimension",
                                      "description": "The column must be present the the source table",
                                      "examples": [
                                        "campaign_name"
                                      ]
                                    },
                                    "pivotable": {
                                      "type": "boolean",
                                      "title": "If the dimension can used for pivoting",
                                      "default": true
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "string",
                                        "integer",
                                        "double",
                                        "long",
                                        "boolean",
                                        "date",
                                        "time",
                                        "decimal",
                                        "timestamp",
                                        "unknown",
                                        "map_string",
                                        "array_string"
                                      ]
                                    },
                                    "timeframes": {
                                      "type": "array"
                                    },
                                    "report": {
                                      "type": "object",
                                      "title": "Defines how should we show the value of the metric in user interface",
                                      "additionalProperties": true,
                                      "properties": {
                                        "suffix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as suffix",
                                          "default": "",
                                          "examples": [
                                            "USD"
                                          ]
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as prefix",
                                          "default": "",
                                          "examples": [
                                            "$"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "measures": {
                                "type": "object",
                                "examples": [
                                  {
                                    "measureName": {
                                      "sql": "total_spent",
                                      "aggregation": "sum",
                                      "report": {
                                        "prefix": "$"
                                      }
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "string",
                                        "integer",
                                        "double",
                                        "long",
                                        "boolean",
                                        "date",
                                        "time",
                                        "decimal",
                                        "timestamp",
                                        "unknown",
                                        "map_string",
                                        "array_string"
                                      ]
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "category": {
                                      "type": "string",
                                      "minLength": 1
                                    },
                                    "dimension": {
                                      "type": "string",
                                      "title": "The dimension name in the same model",
                                      "examples": [
                                        "dimension1"
                                      ]
                                    },
                                    "column": {
                                      "type": "string",
                                      "title": "The column of the measure",
                                      "description": "The column must be present the the source table",
                                      "examples": [
                                        "total_spent"
                                      ]
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression of the measure",
                                      "description": "The SQL expression must evaulate to a number value",
                                      "examples": [
                                        "total_spent / 2"
                                      ]
                                    },
                                    "filters": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "title": "The list of filters",
                                        "required": [
                                          "dimension",
                                          "operator",
                                          "valueType"
                                        ],
                                        "allOf": [
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "string"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "notEquals",
                                                    "not_equals",
                                                    "in",
                                                    "contains",
                                                    "startsWith",
                                                    "starts_with",
                                                    "endsWith",
                                                    "not_contains",
                                                    "notContains"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "enum": [
                                                    "integer",
                                                    "double",
                                                    "long"
                                                  ]
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "timestamp"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than",
                                                    "between"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "date"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "equals",
                                                    "less_than",
                                                    "greater_than",
                                                    "between"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "boolean"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "is"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "const": "time"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "includes",
                                                    "not_includes"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          },
                                          {
                                            "if": {
                                              "properties": {
                                                "valueType": {
                                                  "pattern": "^array+"
                                                }
                                              }
                                            },
                                            "then": {
                                              "properties": {
                                                "operator": {
                                                  "type": "string",
                                                  "enum": [
                                                    "includes",
                                                    "not_includes"
                                                  ]
                                                }
                                              },
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          }
                                        ],
                                        "additionalProperties": false,
                                        "properties": {
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "campaign_name"
                                            ]
                                          },
                                          "valueType": {
                                            "type": "string",
                                            "enum": [
                                              "string",
                                              "integer",
                                              "double",
                                              "long",
                                              "boolean",
                                              "date",
                                              "time",
                                              "decimal",
                                              "timestamp",
                                              "unknown",
                                              "map_string",
                                              "array_string"
                                            ]
                                          },
                                          "value": {
                                            "title": "The value that will be passed to the operator. Note that if operator is not isSet or isNotSet, this value is required."
                                          }
                                        }
                                      }
                                    },
                                    "aggregation": {
                                      "type": "string",
                                      "title": "The aggregation function that will calculate the final value.",
                                      "enum": [
                                        "count",
                                        "countUnique",
                                        "count_unique",
                                        "sum",
                                        "minimum",
                                        "maximum",
                                        "average",
                                        "approximateUnique",
                                        "approximate_unique"
                                      ]
                                    },
                                    "report": {
                                      "type": "object",
                                      "title": "Defines how should we show the value of the metric in user interface",
                                      "additionalProperties": true,
                                      "properties": {
                                        "suffix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as suffix",
                                          "default": "",
                                          "examples": [
                                            "USD"
                                          ]
                                        },
                                        "prefix": {
                                          "type": "string",
                                          "title": "The value will be added to the dimension value as prefix",
                                          "default": "",
                                          "examples": [
                                            "$"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "relations": {
                                "type": "object",
                                "examples": [
                                  {
                                    "relationName": {
                                      "model": "campaign",
                                      "target": "id",
                                      "source": "campaign_id"
                                    }
                                  }
                                ],
                                "additionalProperties": {
                                  "type": "object",
                                  "additionalProperties": false,
                                  "required": [
                                    "to"
                                  ],
                                  "properties": {
                                    "label": {
                                      "type": [
                                        "null",
                                        "string"
                                      ],
                                      "title": "The label that will be visible in UI",
                                      "minLength": 2
                                    },
                                    "description": {
                                      "type": "string",
                                      "title": "The description will be used in UI"
                                    },
                                    "to": {
                                      "type": "string"
                                    },
                                    "hidden": {
                                      "type": "boolean",
                                      "default": false
                                    },
                                    "model": {
                                      "type": "string",
                                      "title": "The target model of the relation",
                                      "examples": [
                                        "campaign"
                                      ]
                                    },
                                    "relationship": {
                                      "type": "string",
                                      "enum": [
                                        "one_to_one",
                                        "one_to_many",
                                        "many_to_one",
                                        "many_to_many"
                                      ],
                                      "title": "The Relation Type",
                                      "default": "one_to_one"
                                    },
                                    "sql": {
                                      "type": "string",
                                      "title": "The SQL expression join relation to the target table",
                                      "examples": [
                                        "{{TABLE}}.campaign_id = {{TARGET}}.id"
                                      ]
                                    },
                                    "sourceColumn": {
                                      "deprecated": true,
                                      "type": "string"
                                    },
                                    "targetColumn": {
                                      "deprecated": true,
                                      "type": "string"
                                    },
                                    "target": {
                                      "type": "string",
                                      "title": "The column of the target model",
                                      "examples": [
                                        "id"
                                      ]
                                    },
                                    "source": {
                                      "type": "string",
                                      "title": "The dimension of the source model",
                                      "examples": [
                                        "campaign_id"
                                      ]
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "left_join",
                                        "inner_join",
                                        "right_join",
                                        "full_join"
                                      ],
                                      "title": "Defines how should we join to the target model",
                                      "default": "leftJoin"
                                    }
                                  }
                                }
                              },
                              "materializes": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "segmentation": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "id": "https://metriql.com/schema/report-options/segmentation.json",
                                      "$schema": "http://json-schema.org/draft-07/schema#",
                                      "title": "The segmentation query model definition",
                                      "additionalProperties": false,
                                      "type": "object",
                                      "definitions": {
                                        "filter": {
                                          "type": "array",
                                          "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                          "items": {
                                            "type": "object",
                                            "examples": [
                                              {
                                                "measure": "total_transactions",
                                                "operator": "greater_than",
                                                "value": 1000
                                              }
                                            ],
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "measure": {
                                                "type": "string",
                                                "examples": [
                                                  "total_transactions"
                                                ]
                                              },
                                              "dimension": {
                                                "type": "string",
                                                "examples": [
                                                  "user_type",
                                                  ":event_timestamp"
                                                ]
                                              },
                                              "operator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is_set",
                                                      "is_not_set"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                        },
                                        "measure": {
                                          "type": "string",
                                          "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                        }
                                      },
                                      "properties": {
                                        "dataset": {
                                          "type": "string",
                                          "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                          "examples": [
                                            "in_app_purchase"
                                          ]
                                        },
                                        "dimensions": {
                                          "type": "array",
                                          "items": {
                                            "examples": [
                                              [
                                                "event_timestamp::day",
                                                "user_type"
                                              ]
                                            ],
                                            "type": "string",
                                            "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                          }
                                        },
                                        "measures": {
                                          "type": "array",
                                          "items": {
                                            "examples": [
                                              [
                                                "total_transactions"
                                              ]
                                            ],
                                            "type": "string",
                                            "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                          }
                                        },
                                        "reportOptions": {
                                          "type": "object",
                                          "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                          "examples": [
                                            {
                                              "chartOptions": {
                                                "interactive": true,
                                                "columnOptions": [],
                                                "type": "area",
                                                "showLabels": true,
                                                "showLegend": false
                                              },
                                              "tableOptions": {
                                                "columnOptions": []
                                              },
                                              "columnOptions": null
                                            }
                                          ],
                                          "properties": {
                                            "chartOptions": {
                                              "type": "object",
                                              "examples": [
                                                {
                                                  "interactive": true,
                                                  "columnOptions": [],
                                                  "type": "area",
                                                  "showLabels": true,
                                                  "showLegend": false
                                                }
                                              ],
                                              "additionalProperties": true
                                            },
                                            "tableOptions": {
                                              "type": "object",
                                              "examples": [
                                                {
                                                  "columnOptions": []
                                                }
                                              ],
                                              "additionalProperties": true
                                            },
                                            "columnOptions": {
                                              "type": "array"
                                            }
                                          }
                                        },
                                        "limit": {
                                          "type": "integer",
                                          "description": "The maximum rows returned by the query.",
                                          "maximum": 50000,
                                          "default": 1000,
                                          "examples": [
                                            5000
                                          ]
                                        },
                                        "filters": {
                                          "type": "array",
                                          "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                          "items": {
                                            "type": "object",
                                            "examples": [
                                              {
                                                "measure": "total_transactions",
                                                "operator": "greater_than",
                                                "value": 1000
                                              }
                                            ],
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "measure": {
                                                "type": "string",
                                                "examples": [
                                                  "total_transactions"
                                                ]
                                              },
                                              "dimension": {
                                                "type": "string",
                                                "examples": [
                                                  "user_type",
                                                  ":event_timestamp"
                                                ]
                                              },
                                              "operator": {
                                                "anyOf": [
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is_set",
                                                      "is_not_set"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "includes",
                                                      "not_includes"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "is"
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": [
                                                      "equals",
                                                      "less_than",
                                                      "greater_than",
                                                      "between"
                                                    ]
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "aggregates": {
                                "type": "object",
                                "additionalProperties": {
                                  "id": "https://metriql.com/schema/report-options/segmentation.json",
                                  "$schema": "http://json-schema.org/draft-07/schema#",
                                  "title": "The segmentation query model definition",
                                  "additionalProperties": false,
                                  "type": "object",
                                  "definitions": {
                                    "filter": {
                                      "type": "array",
                                      "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                      "items": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "measure": "total_transactions",
                                            "operator": "greater_than",
                                            "value": 1000
                                          }
                                        ],
                                        "oneOf": [
                                          {
                                            "required": [
                                              "measure"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "dimension"
                                            ]
                                          }
                                        ],
                                        "properties": {
                                          "measure": {
                                            "type": "string",
                                            "examples": [
                                              "total_transactions"
                                            ]
                                          },
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "user_type",
                                              ":event_timestamp"
                                            ]
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is_set",
                                                  "is_not_set"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "dimension": {
                                      "type": "string",
                                      "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                    },
                                    "measure": {
                                      "type": "string",
                                      "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                    }
                                  },
                                  "properties": {
                                    "dataset": {
                                      "type": "string",
                                      "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                      "examples": [
                                        "in_app_purchase"
                                      ]
                                    },
                                    "dimensions": {
                                      "type": "array",
                                      "items": {
                                        "examples": [
                                          [
                                            "event_timestamp::day",
                                            "user_type"
                                          ]
                                        ],
                                        "type": "string",
                                        "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                      }
                                    },
                                    "measures": {
                                      "type": "array",
                                      "items": {
                                        "examples": [
                                          [
                                            "total_transactions"
                                          ]
                                        ],
                                        "type": "string",
                                        "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                      }
                                    },
                                    "reportOptions": {
                                      "type": "object",
                                      "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                      "examples": [
                                        {
                                          "chartOptions": {
                                            "interactive": true,
                                            "columnOptions": [],
                                            "type": "area",
                                            "showLabels": true,
                                            "showLegend": false
                                          },
                                          "tableOptions": {
                                            "columnOptions": []
                                          },
                                          "columnOptions": null
                                        }
                                      ],
                                      "properties": {
                                        "chartOptions": {
                                          "type": "object",
                                          "examples": [
                                            {
                                              "interactive": true,
                                              "columnOptions": [],
                                              "type": "area",
                                              "showLabels": true,
                                              "showLegend": false
                                            }
                                          ],
                                          "additionalProperties": true
                                        },
                                        "tableOptions": {
                                          "type": "object",
                                          "examples": [
                                            {
                                              "columnOptions": []
                                            }
                                          ],
                                          "additionalProperties": true
                                        },
                                        "columnOptions": {
                                          "type": "array"
                                        }
                                      }
                                    },
                                    "limit": {
                                      "type": "integer",
                                      "description": "The maximum rows returned by the query.",
                                      "maximum": 50000,
                                      "default": 1000,
                                      "examples": [
                                        5000
                                      ]
                                    },
                                    "filters": {
                                      "type": "array",
                                      "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                      "items": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "measure": "total_transactions",
                                            "operator": "greater_than",
                                            "value": 1000
                                          }
                                        ],
                                        "oneOf": [
                                          {
                                            "required": [
                                              "measure"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "dimension"
                                            ]
                                          }
                                        ],
                                        "properties": {
                                          "measure": {
                                            "type": "string",
                                            "examples": [
                                              "total_transactions"
                                            ]
                                          },
                                          "dimension": {
                                            "type": "string",
                                            "examples": [
                                              "user_type",
                                              ":event_timestamp"
                                            ]
                                          },
                                          "operator": {
                                            "anyOf": [
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is_set",
                                                  "is_not_set"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "includes",
                                                  "not_includes"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "is"
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": [
                                                  "equals",
                                                  "less_than",
                                                  "greater_than",
                                                  "between"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "errorMessage1": {
                              "required": "The model definition must be an object with required property `name` and either `target` or `sql` property that defines the data source"
                            }
                          },
                          "type": "array"
                        }
                      }
                    }
                  }
                },
                "summary": "Get metadata",
                "tags": [
                  "admin"
                ]
              }
            },
            "/v0/query": {
              "post": {
                "operationId": "ExecuteQuery",
                "externalDocs": {
                  "description": "Learn more about report types",
                  "url": "https://metriql.com/query/introduction"
                },
                "parameters": [
                  {
                    "in": "query",
                    "name": "useCache",
                    "schema": {
                      "type": "boolean"
                    }
                  },
                  {
                    "in": "query",
                    "name": "initialWaitInSeconds",
                    "schema": {
                      "default": 50,
                      "type": "integer"
                    }
                  }
                ],
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "segmentation": "#/components/schemas/SegmentationQuery",
                            "funnel": "#/components/schemas/FunnelQuery",
                            "retention": "#/components/schemas/RetentionQuery",
                            "sql": "#/components/schemas/SqlQuery"
                          }
                        },
                        "anyOf": [
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/segmentation.json",
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "The segmentation query model definition",
                                "additionalProperties": false,
                                "type": "object",
                                "definitions": {
                                  "filter": {
                                    "type": "array",
                                    "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                    "items": {
                                      "type": "object",
                                      "examples": [
                                        {
                                          "measure": "total_transactions",
                                          "operator": "greater_than",
                                          "value": 1000
                                        }
                                      ],
                                      "oneOf": [
                                        {
                                          "required": [
                                            "measure"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "dimension"
                                          ]
                                        }
                                      ],
                                      "properties": {
                                        "measure": {
                                          "type": "string",
                                          "examples": [
                                            "total_transactions"
                                          ]
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "examples": [
                                            "user_type",
                                            ":event_timestamp"
                                          ]
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is_set",
                                                "is_not_set"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "dimension": {
                                    "type": "string",
                                    "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                  },
                                  "measure": {
                                    "type": "string",
                                    "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                  }
                                },
                                "properties": {
                                  "dataset": {
                                    "type": "string",
                                    "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                    "examples": [
                                      "in_app_purchase"
                                    ]
                                  },
                                  "dimensions": {
                                    "type": "array",
                                    "items": {
                                      "examples": [
                                        [
                                          "event_timestamp::day",
                                          "user_type"
                                        ]
                                      ],
                                      "type": "string",
                                      "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                    }
                                  },
                                  "measures": {
                                    "type": "array",
                                    "items": {
                                      "examples": [
                                        [
                                          "total_transactions"
                                        ]
                                      ],
                                      "type": "string",
                                      "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                    }
                                  },
                                  "reportOptions": {
                                    "type": "object",
                                    "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                    "examples": [
                                      {
                                        "chartOptions": {
                                          "interactive": true,
                                          "columnOptions": [],
                                          "type": "area",
                                          "showLabels": true,
                                          "showLegend": false
                                        },
                                        "tableOptions": {
                                          "columnOptions": []
                                        },
                                        "columnOptions": null
                                      }
                                    ],
                                    "properties": {
                                      "chartOptions": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "interactive": true,
                                            "columnOptions": [],
                                            "type": "area",
                                            "showLabels": true,
                                            "showLegend": false
                                          }
                                        ],
                                        "additionalProperties": true
                                      },
                                      "tableOptions": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "columnOptions": []
                                          }
                                        ],
                                        "additionalProperties": true
                                      },
                                      "columnOptions": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "limit": {
                                    "type": "integer",
                                    "description": "The maximum rows returned by the query.",
                                    "maximum": 50000,
                                    "default": 1000,
                                    "examples": [
                                      5000
                                    ]
                                  },
                                  "filters": {
                                    "type": "array",
                                    "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                    "items": {
                                      "type": "object",
                                      "examples": [
                                        {
                                          "measure": "total_transactions",
                                          "operator": "greater_than",
                                          "value": 1000
                                        }
                                      ],
                                      "oneOf": [
                                        {
                                          "required": [
                                            "measure"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "dimension"
                                          ]
                                        }
                                      ],
                                      "properties": {
                                        "measure": {
                                          "type": "string",
                                          "examples": [
                                            "total_transactions"
                                          ]
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "examples": [
                                            "user_type",
                                            ":event_timestamp"
                                          ]
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is_set",
                                                "is_not_set"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/funnel.json",
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "Funnel Recipe Query",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "steps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "dataset": {
                                          "type": "string"
                                        },
                                        "filters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                              "dimension": {},
                                              "measure": {
                                                "type": "string"
                                              },
                                              "mapping": {
                                                "type": "string"
                                              },
                                              "operator": {
                                                "type": "string"
                                              },
                                              "value": {}
                                            },
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "mapping"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "dataset"
                                      ]
                                    }
                                  },
                                  "excludedSteps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "start": {
                                          "type": "integer"
                                        },
                                        "step": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dataset": {
                                              "type": "string"
                                            },
                                            "filters": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                  "dimension": {},
                                                  "measure": {
                                                    "type": "string"
                                                  },
                                                  "mapping": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "string"
                                                  },
                                                  "value": {}
                                                },
                                                "oneOf": [
                                                  {
                                                    "required": [
                                                      "measure"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "mapping"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "dimension"
                                                    ]
                                                  }
                                                ],
                                                "required": [
                                                  "operator"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "dataset"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "step"
                                      ]
                                    }
                                  },
                                  "dimension": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "step": {
                                        "type": "integer"
                                      },
                                      "dimension": {}
                                    },
                                    "required": [
                                      "step",
                                      "dimension"
                                    ]
                                  },
                                  "window": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "integer"
                                      },
                                      "type": {}
                                    },
                                    "required": [
                                      "value",
                                      "type"
                                    ]
                                  },
                                  "connector": {
                                    "type": "string"
                                  },
                                  "strictlyOrdered": {
                                    "type": "boolean"
                                  },
                                  "approximate": {
                                    "type": "boolean"
                                  },
                                  "defaultDateRange": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "steps"
                                ],
                                "definitions": {
                                  "RecipeDataset": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "FilterReference": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {},
                                      "measure": {
                                        "type": "string"
                                      },
                                      "mapping": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "value": {}
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "measure"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "mapping"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "dimension"
                                        ]
                                      }
                                    ],
                                    "required": [
                                      "operator"
                                    ]
                                  },
                                  "ExcludedStep": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "start": {
                                        "type": "integer"
                                      },
                                      "step": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                          "dataset": {
                                            "type": "string"
                                          },
                                          "filters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "properties": {
                                                "dimension": {},
                                                "measure": {
                                                  "type": "string"
                                                },
                                                "mapping": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "type": "string"
                                                },
                                                "value": {}
                                              },
                                              "oneOf": [
                                                {
                                                  "required": [
                                                    "measure"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "mapping"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "dimension"
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "dataset"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "step"
                                    ]
                                  },
                                  "FunnelDimension": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "step": {
                                        "type": "integer"
                                      },
                                      "dimension": {}
                                    },
                                    "required": [
                                      "step",
                                      "dimension"
                                    ]
                                  },
                                  "FunnelWindow": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "integer"
                                      },
                                      "type": {}
                                    },
                                    "required": [
                                      "value",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/retention.json",
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "Retention Recipe Query",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "first_step": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "returning_step": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "dimension": {
                                    "type": "string"
                                  },
                                  "approximate": {
                                    "type": "boolean"
                                  },
                                  "date_unit": {},
                                  "connector": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "first_step",
                                  "returning_step"
                                ],
                                "definitions": {
                                  "FilterReference": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {},
                                      "measure": {
                                        "type": "string"
                                      },
                                      "mapping": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "value": {}
                                    },
                                    "required": [
                                      "operator"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "id": "https://metriql.com/schema/report-options/sql.json",
                                "title": "Sql Report Options",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "query": {
                                    "type": "string"
                                  },
                                  "query_options": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "limit": {
                                        "type": "integer"
                                      },
                                      "default_database": {
                                        "type": "string"
                                      },
                                      "default_schema": {
                                        "type": "string"
                                      },
                                      "use_cache": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "report_options": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "measures": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "dimensions": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "pivots": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "chartOptions": {},
                                      "tableOptions": {},
                                      "columnOptions": {
                                        "type": "array",
                                        "items": {}
                                      }
                                    }
                                  },
                                  "version": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "query"
                                ],
                                "definitions": {
                                  "QueryOptions": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "limit": {
                                        "type": "integer"
                                      },
                                      "default_database": {
                                        "type": "string"
                                      },
                                      "default_schema": {
                                        "type": "string"
                                      },
                                      "use_cache": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "ReportOptions": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "measures": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "dimensions": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "pivots": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "chartOptions": {},
                                      "tableOptions": {},
                                      "columnOptions": {
                                        "type": "array",
                                        "items": {}
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            },
                            "result": {
                              "properties": {
                                "error": {
                                  "properties": {
                                    "charPositionInLine": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "errorCode": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "errorLine": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "sqlState": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "metadata": {
                                  "items": {
                                    "properties": {
                                      "dbType": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "position": {
                                        "format": "int32",
                                        "type": "integer"
                                      },
                                      "type": {
                                        "enum": [
                                          "STRING",
                                          "INTEGER",
                                          "DECIMAL",
                                          "DOUBLE",
                                          "LONG",
                                          "BOOLEAN",
                                          "DATE",
                                          "TIME",
                                          "TIMESTAMP",
                                          "BINARY",
                                          "ARRAY_STRING",
                                          "ARRAY_INTEGER",
                                          "ARRAY_DOUBLE",
                                          "ARRAY_LONG",
                                          "ARRAY_BOOLEAN",
                                          "ARRAY_DATE",
                                          "ARRAY_TIME",
                                          "ARRAY_TIMESTAMP",
                                          "MAP_STRING",
                                          "UNKNOWN"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "position"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "properties": {
                                  "additionalProperties": {
                                    "type": "object"
                                  },
                                  "type": "object"
                                },
                                "result": {
                                  "items": {
                                    "items": {
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            },
                            "startedAt": {
                              "format": "date-time",
                              "type": "string"
                            },
                            "status": {
                              "enum": [
                                "IDLE",
                                "RUNNING",
                                "CANCELED",
                                "FINISHED"
                              ],
                              "type": "string"
                            },
                            "update": {
                              "type": "object"
                            }
                          },
                          "required": [
                            "startedAt",
                            "status"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "summary": "Execute query"
              }
            },
            "/v0/sql": {
              "post": {
                "operationId": "CompileQuery",
                "externalDocs": {
                  "description": "Learn more about report types",
                  "url": "https://metriql.com/query/introduction"
                },
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "discriminator": {
                          "propertyName": "type",
                          "mapping": {
                            "segmentation": "#/components/schemas/SegmentationQuery",
                            "funnel": "#/components/schemas/FunnelQuery",
                            "retention": "#/components/schemas/RetentionQuery",
                            "sql": "#/components/schemas/SqlQuery"
                          }
                        },
                        "anyOf": [
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/segmentation.json",
                                "$schema": "http://json-schema.org/draft-07/schema#",
                                "title": "The segmentation query model definition",
                                "additionalProperties": false,
                                "type": "object",
                                "definitions": {
                                  "filter": {
                                    "type": "array",
                                    "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                    "items": {
                                      "type": "object",
                                      "examples": [
                                        {
                                          "measure": "total_transactions",
                                          "operator": "greater_than",
                                          "value": 1000
                                        }
                                      ],
                                      "oneOf": [
                                        {
                                          "required": [
                                            "measure"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "dimension"
                                          ]
                                        }
                                      ],
                                      "properties": {
                                        "measure": {
                                          "type": "string",
                                          "examples": [
                                            "total_transactions"
                                          ]
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "examples": [
                                            "user_type",
                                            ":event_timestamp"
                                          ]
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is_set",
                                                "is_not_set"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "dimension": {
                                    "type": "string",
                                    "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                  },
                                  "measure": {
                                    "type": "string",
                                    "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                  }
                                },
                                "properties": {
                                  "dataset": {
                                    "type": "string",
                                    "description": "The dataset that will be analyzed. See [dataset reference](https://metriql.com/query/introduction#dimension)",
                                    "examples": [
                                      "in_app_purchase"
                                    ]
                                  },
                                  "dimensions": {
                                    "type": "array",
                                    "items": {
                                      "examples": [
                                        [
                                          "event_timestamp::day",
                                          "user_type"
                                        ]
                                      ],
                                      "type": "string",
                                      "description": "Dimension references that you want to drill-down for the selected dataset. See [dimension reference](https://metriql.com/query/introduction#dimension)"
                                    }
                                  },
                                  "measures": {
                                    "type": "array",
                                    "items": {
                                      "examples": [
                                        [
                                          "total_transactions"
                                        ]
                                      ],
                                      "type": "string",
                                      "description": "Measure references that you want to calculate for the selected dataset. See [measure reference](https://metriql.com/query/introduction#measure)"
                                    }
                                  },
                                  "reportOptions": {
                                    "type": "object",
                                    "description": "The default report options that will be used when visualizing the data. Not appliable in REST API",
                                    "examples": [
                                      {
                                        "chartOptions": {
                                          "interactive": true,
                                          "columnOptions": [],
                                          "type": "area",
                                          "showLabels": true,
                                          "showLegend": false
                                        },
                                        "tableOptions": {
                                          "columnOptions": []
                                        },
                                        "columnOptions": null
                                      }
                                    ],
                                    "properties": {
                                      "chartOptions": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "interactive": true,
                                            "columnOptions": [],
                                            "type": "area",
                                            "showLabels": true,
                                            "showLegend": false
                                          }
                                        ],
                                        "additionalProperties": true
                                      },
                                      "tableOptions": {
                                        "type": "object",
                                        "examples": [
                                          {
                                            "columnOptions": []
                                          }
                                        ],
                                        "additionalProperties": true
                                      },
                                      "columnOptions": {
                                        "type": "array"
                                      }
                                    }
                                  },
                                  "limit": {
                                    "type": "integer",
                                    "description": "The maximum rows returned by the query.",
                                    "maximum": 50000,
                                    "default": 1000,
                                    "examples": [
                                      5000
                                    ]
                                  },
                                  "filters": {
                                    "type": "array",
                                    "description": "The filter for the dataset. See [filter reference](https://metriql.com/query/introduction#filter) for details.",
                                    "items": {
                                      "type": "object",
                                      "examples": [
                                        {
                                          "measure": "total_transactions",
                                          "operator": "greater_than",
                                          "value": 1000
                                        }
                                      ],
                                      "oneOf": [
                                        {
                                          "required": [
                                            "measure"
                                          ]
                                        },
                                        {
                                          "required": [
                                            "dimension"
                                          ]
                                        }
                                      ],
                                      "properties": {
                                        "measure": {
                                          "type": "string",
                                          "examples": [
                                            "total_transactions"
                                          ]
                                        },
                                        "dimension": {
                                          "type": "string",
                                          "examples": [
                                            "user_type",
                                            ":event_timestamp"
                                          ]
                                        },
                                        "operator": {
                                          "anyOf": [
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is_set",
                                                "is_not_set"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "includes",
                                                "not_includes"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "is"
                                              ]
                                            },
                                            {
                                              "type": "string",
                                              "enum": [
                                                "equals",
                                                "less_than",
                                                "greater_than",
                                                "between"
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/funnel.json",
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "Funnel Recipe Query",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "steps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "dataset": {
                                          "type": "string"
                                        },
                                        "filters": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                              "dimension": {},
                                              "measure": {
                                                "type": "string"
                                              },
                                              "mapping": {
                                                "type": "string"
                                              },
                                              "operator": {
                                                "type": "string"
                                              },
                                              "value": {}
                                            },
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "measure"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "mapping"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "dimension"
                                                ]
                                              }
                                            ],
                                            "required": [
                                              "operator"
                                            ]
                                          }
                                        }
                                      },
                                      "required": [
                                        "dataset"
                                      ]
                                    }
                                  },
                                  "excludedSteps": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "additionalProperties": false,
                                      "properties": {
                                        "start": {
                                          "type": "integer"
                                        },
                                        "step": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dataset": {
                                              "type": "string"
                                            },
                                            "filters": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "additionalProperties": false,
                                                "properties": {
                                                  "dimension": {},
                                                  "measure": {
                                                    "type": "string"
                                                  },
                                                  "mapping": {
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "type": "string"
                                                  },
                                                  "value": {}
                                                },
                                                "oneOf": [
                                                  {
                                                    "required": [
                                                      "measure"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "mapping"
                                                    ]
                                                  },
                                                  {
                                                    "required": [
                                                      "dimension"
                                                    ]
                                                  }
                                                ],
                                                "required": [
                                                  "operator"
                                                ]
                                              }
                                            }
                                          },
                                          "required": [
                                            "dataset"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "step"
                                      ]
                                    }
                                  },
                                  "dimension": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "step": {
                                        "type": "integer"
                                      },
                                      "dimension": {}
                                    },
                                    "required": [
                                      "step",
                                      "dimension"
                                    ]
                                  },
                                  "window": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "integer"
                                      },
                                      "type": {}
                                    },
                                    "required": [
                                      "value",
                                      "type"
                                    ]
                                  },
                                  "connector": {
                                    "type": "string"
                                  },
                                  "strictlyOrdered": {
                                    "type": "boolean"
                                  },
                                  "approximate": {
                                    "type": "boolean"
                                  },
                                  "defaultDateRange": {
                                    "type": "integer"
                                  }
                                },
                                "required": [
                                  "steps"
                                ],
                                "definitions": {
                                  "RecipeDataset": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "FilterReference": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {},
                                      "measure": {
                                        "type": "string"
                                      },
                                      "mapping": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "value": {}
                                    },
                                    "oneOf": [
                                      {
                                        "required": [
                                          "measure"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "mapping"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "dimension"
                                        ]
                                      }
                                    ],
                                    "required": [
                                      "operator"
                                    ]
                                  },
                                  "ExcludedStep": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "start": {
                                        "type": "integer"
                                      },
                                      "step": {
                                        "type": "object",
                                        "additionalProperties": false,
                                        "properties": {
                                          "dataset": {
                                            "type": "string"
                                          },
                                          "filters": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "additionalProperties": false,
                                              "properties": {
                                                "dimension": {},
                                                "measure": {
                                                  "type": "string"
                                                },
                                                "mapping": {
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "type": "string"
                                                },
                                                "value": {}
                                              },
                                              "oneOf": [
                                                {
                                                  "required": [
                                                    "measure"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "mapping"
                                                  ]
                                                },
                                                {
                                                  "required": [
                                                    "dimension"
                                                  ]
                                                }
                                              ],
                                              "required": [
                                                "operator"
                                              ]
                                            }
                                          }
                                        },
                                        "required": [
                                          "dataset"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "step"
                                    ]
                                  },
                                  "FunnelDimension": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "step": {
                                        "type": "integer"
                                      },
                                      "dimension": {}
                                    },
                                    "required": [
                                      "step",
                                      "dimension"
                                    ]
                                  },
                                  "FunnelWindow": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "value": {
                                        "type": "integer"
                                      },
                                      "type": {}
                                    },
                                    "required": [
                                      "value",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "id": "https://metriql.com/schema/report-options/retention.json",
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "title": "Retention Recipe Query",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "first_step": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "returning_step": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dataset": {
                                        "type": "string"
                                      },
                                      "filters": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "additionalProperties": false,
                                          "properties": {
                                            "dimension": {},
                                            "measure": {
                                              "type": "string"
                                            },
                                            "mapping": {
                                              "type": "string"
                                            },
                                            "operator": {
                                              "type": "string"
                                            },
                                            "value": {}
                                          },
                                          "oneOf": [
                                            {
                                              "required": [
                                                "measure"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "mapping"
                                              ]
                                            },
                                            {
                                              "required": [
                                                "dimension"
                                              ]
                                            }
                                          ],
                                          "required": [
                                            "operator"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "dataset"
                                    ]
                                  },
                                  "dimension": {
                                    "type": "string"
                                  },
                                  "approximate": {
                                    "type": "boolean"
                                  },
                                  "date_unit": {},
                                  "connector": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "first_step",
                                  "returning_step"
                                ],
                                "definitions": {
                                  "FilterReference": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "dimension": {},
                                      "measure": {
                                        "type": "string"
                                      },
                                      "mapping": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "value": {}
                                    },
                                    "required": [
                                      "operator"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "type": {
                                "enum": [
                                  "segmentation"
                                ]
                              },
                              "report": {
                                "$schema": "http://json-schema.org/draft-04/schema#",
                                "id": "https://metriql.com/schema/report-options/sql.json",
                                "title": "Sql Report Options",
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                  "query": {
                                    "type": "string"
                                  },
                                  "query_options": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "limit": {
                                        "type": "integer"
                                      },
                                      "default_database": {
                                        "type": "string"
                                      },
                                      "default_schema": {
                                        "type": "string"
                                      },
                                      "use_cache": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "report_options": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "measures": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "dimensions": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "pivots": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "chartOptions": {},
                                      "tableOptions": {},
                                      "columnOptions": {
                                        "type": "array",
                                        "items": {}
                                      }
                                    }
                                  },
                                  "version": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "query"
                                ],
                                "definitions": {
                                  "QueryOptions": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "limit": {
                                        "type": "integer"
                                      },
                                      "default_database": {
                                        "type": "string"
                                      },
                                      "default_schema": {
                                        "type": "string"
                                      },
                                      "use_cache": {
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "ReportOptions": {
                                    "type": "object",
                                    "additionalProperties": false,
                                    "properties": {
                                      "measures": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "dimensions": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "pivots": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer"
                                        }
                                      },
                                      "chartOptions": {},
                                      "tableOptions": {},
                                      "columnOptions": {
                                        "type": "array",
                                        "items": {}
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "summary": "Compile SQL query"
              }
            },
            "/v0/update-manifest": {
              "put": {
                "description": "",
                "operationId": "UpdateManifest",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "success": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "success"
                        ],
                        "type": "object"
                      }
                    }
                  }
                },
                "summary": "Update manifest.json file",
                "responses": {
                  "200": {
                    "description": "Successful request",
                    "content": {
                      "application/json": {
                        "schema": {
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "success": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "success"
                          ],
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "tags": [
                  "admin"
                ]
              }
            }
          },
          "/v1/update-manifest": {
            "put": {
              "description": "",
              "operationId": "UpdateManifest",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/SuccessMessage"
                    }
                  }
                }
              },
              "summary": "Update manifest.json file",
              "responses": {
                "200": {
                  "description": "Successful request",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SuccessMessage"
                      }
                    }
                  }
                }
              },
              "tags": [
                "admin"
              ]
            }
          }
        }
      }
    }
  }
}